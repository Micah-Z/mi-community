<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mi.gateway.mapper.RouterMapper">
    <resultMap id="routerMap" type="org.mi.gateway.model.Router">
        <id property="id" column="id"/>
        <result property="enable" column="enable"/>
        <result property="intervalSec" column="interval_sec"/>
        <result property="routerId" column="router_id"/>
        <result property="routerName" column="router_name"/>
        <result property="routerType" column="router_type"/>
        <result property="routerUrl" column="router_url"/>
        <result property="threshold" column="threshold"/>
        <result property="type" column="type"/>
        <collection property="predicates" resultMap="org.mi.gateway.mapper.PredicateMapper.predicateMap"/>
        <collection property="filters" resultMap="org.mi.gateway.mapper.FilterMapper.filterMap"/>
    </resultMap>

    <sql id="baseSql">
            r.id,
            r.router_id,
            r.router_name,
            r.router_type,
            r.router_url,
            r.enable,
            r.threshold,
            r.interval_sec,
            r.type,
            f.id as filter_id,
            f.filter_name,
            f.filter_val,
            p.id as predicate_id,
            p.predicate_name,
            p.predicate_val
        from router r
                 left join router_filter rf on r.id = rf.router_id
                 left join filter f on rf.filter_id = f.id
                 left join router_predicate rp on r.id = rp.router_id
                 left join predicate p on rp.predicate_id = p.id
    </sql>

    <select id="selectAll" resultMap="routerMap">
        select
        <include refid="baseSql"/>
        <where>
            r.type = 1
        </where>
    </select>
</mapper>